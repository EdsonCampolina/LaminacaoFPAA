Incio alogritmo guloso!
Iniciando redução da lâmina de largura = 25
Lamina reduziu 1MM, custo total da reducao = 1
Nova largura = 24
Lamina reduziu 1MM, custo total da reducao = 2
Nova largura = 23
Lamina reduziu 1MM, custo total da reducao = 3
Nova largura = 22
Lamina reduziu 2MM, custo total da reducao = 7
Nova largura = 20
Lamina reduziu 1MM, custo total da reducao = 9
Nova largura = 19
Lamina reduziu 1MM, custo total da reducao = 12
Nova largura = 18
Lamina reduziu 1MM, custo total da reducao = 15
Nova largura = 17
Lamina reduziu 3MM, custo total da reducao = 27
Nova largura = 14
Lamina reduziu 3MM, custo total da reducao = 44
Nova largura = 11
Lamina reduziu 3MM, custo total da reducao = 63
Nova largura = 8
Lamina reduziu 3MM, custo total da reducao = 86
Nova largura = 5
Lamina reduziu 1MM, custo total da reducao = 99
Nova largura = 4
Lâmina reduzida com sucesso!
Custo total da operação = 99
Número de reduções realizadas = 12
Fim algoritmo guloso!



Iniciando execução da programação dinâmica!
1   3   7   X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    

1   2   4   9   X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    

1   2   3   6   11   X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    

1   2   3   5   7   12   X    X    X    X    X    X    X    X    X    X    X    X    X    X    X    

1   2   3   5   7   10   15   X    X    X    X    X    X    X    X    X    X    X    X    X    X    

1   2   3   5   7   9   13   18   X    X    X    X    X    X    X    X    X    X    X    X    X    

1   2   3   5   7   9   12   16   21   X    X    X    X    X    X    X    X    X    X    X    X    

1   2   3   5   7   9   12   15   21   24   X    X    X    X    X    X    X    X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   X    X    X    X    X    X    X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   X    X    X    X    X    X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   40   X    X    X    X    X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   40   44   X    X    X    X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   X    X    X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   X    X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   63   X    X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   63   70   X    X    X    

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   63   70   79   X    X    

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   63   70   79   86   X    

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   63   70   79   86   95   

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   63   70   79   86   95   

1   2   3   5   7   9   12   15   19   24   27   32   39   44   50   57   63   70   79   86   95   

Melhor valor via programação dinâmica é 95
Programação dinâmica finalizada!


Procurando valor via BackTracking
Melhor valor encontrado via backtracking: 95



Tempo de execução do algoritmo guloso em nanossegundos = 1876399
Tempo de execução da programação dinâmica em nanossegundos = 2663201
Tempo de execução do backtracking em nanossegundos = 69457299
